GIT Homework 1

Для выполнения задания у вас должен быть установлен для Windows - GitBash // +
Создан аккаунт в GitHub // +

Все шаги сценария выполняйте в терминале GitBush, Terminal, в папке под гитом. // +


Как отправить ДЗ на проверку.
 1. Создайте текстовый файл как в первом ДЗ по Terminal // +
 2. Сценарий перенесите в этот файл // +
 3. На против каждого действия - напишите команду в GitBash // +

Файл со сценарием и ссылку на свой гит хаб отправляйте менторам на проверку.

JSON

 4. Создать внешний репозиторий c названием JSON. 
         https://github.com/Shaginosik/JSON (JSON и XML репозитарий создавался на веб сервисе. TXT репозитарий сознан в Bash)

 5. Клонировать репозиторий JSON на локальный компьютер. 
         git clone https://github.com/Shaginosik/JSON.git

 6. Внутри локального JSON создать файл “new.json”. 
         cd JSON 
         touch new.json 

 7. Добавить файл под гит.
         git add new.json  
 
 8. Закоммитить файл. 
         git commit -m "add new.json" 

 9. Отправить файл на внешний GitHub репозиторий. 
         git push

 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
         vim new.json далее i далее вводим текст

{
        "ФИО": "Шагинов Евгений Валерьевич",
        "Возраст": 39,
        "Количество домашних животных": 0,
        "Будущая желаемая зарплата": 250000
}

        нажать Esc и ввести :wq (для выхода)

 11. Отправить изменения на внешний репозиторий. 
        git add new.json 
        git commit -m "внес информацию о себе" 
        git push

 12. Создать файл preferences.json 
        touch preferences.json

 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
preferences.json 
        vim preferences.json далее i далее вводим текст

{
        "Любимый фильм": "Назад в будущее",
        "Люимый сериал": "Игра престолов",
        "Любимая еда": "Макароны",
        "Любимое время года": "Лето",
        "Страна которую хотели бы посетить": "США"
}

       нажать Esc и ввести :wq (для выхода)


 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON 
        vim sklls.json далее i далее вводим текст

{
        "Hard skills": {
                "GitBash": "Создание, копирование, редактирование файлов/папок",
                "Git": "Создание репозитария, клонирование",
                "JSON, XML": "их структура"
        }
}

        нажать Esc и ввести :wq (для выхода)

 15. Отправить сразу 2 файла на внешний репозиторий. 
           git add -A 
           git commit -m "два новых файла" 
           git push
 
 16. На веб интерфейсе создать файл bug_report.json. 
         - через add file в репозитории 

 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе. 
         - внесен коммит Create bug_report.json и нажата кнопка "commit new file"

 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON. 
         - нажать на карандаш и внести изменения
{
  "Название баг репорта": "При тестирование баг репорта не выгружается строка summary в пятой строке",
  "Краткое описание ошибки": "При обновлении баг репорта, перестала выгружаться строка summary",
  "Серьезность бага": "medium",
  "Приоритет бага": "Minor",
  "Шаги": {
    "1": "Создать баг репорт",
    "2": "Внести изминенния в строку summery"},
  "Ожидаемый результат": "Строка summery присутствует",
  "Фактический результат": "Строка summery отсутствует"
}

 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе. 
         - Внесен commit и нажата кнопка "Commit changes" 

 20. Синхронизировать внешний и локальный репозиторий JSON 
           git pull

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

XML

 21. Создать внешний репозиторий c названием XML. 
          https://github.com/Shaginosik/XML.git (JSON и XML репозитарий создавался на веб сервисе. TXT репозитарий сознан в Bash)
 
22. Клонировать репозиторий XML на локальный компьютер. 
         git clone https://github.com/Shaginosik/XML.git
 
 23. Внутри локального XML создать файл “new.xml”. 
         cd xml 
         touch new.xml

 24. Добавить файл под гит. 
         git add new.xml

 25. Закоммитить файл. 
         git commit -m "add new.xml"

 26. Отправить файл на внешний GitHub репозиторий. 
         git push

 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
         vim new.xml далее i далее вводим текст

<?xml version="1.0" encoding="UTF-8"?>
<UserInfo>
        <Name>Shaginov Evgeniy</Name>
        <Age>39</Age>
        <NumberOfPets>0</NumberOfPets>
        <sallary>250000</sallary>
</UserInfo>

        нажать Esc и ввести :wq (для выхода)

 28. Отправить изменения на внешний репозиторий. 
        git add new.xml  
        git commit -m "add new.xml"  
        git push

 29. Создать файл preferences.xml 
        touch preferences.xml

 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.

        vim preferences.xml далее i далее вводим текст

<?xml version="1.0" encoding="windows-1251"?>
<Preferences>
<Favorite_movie> Скалолаз </Favorite_movie>
<Favorite_series> Шерлок холмс </Favorite_series>
<Favorite_food> Биг маг </Favorite_food>
<Favorite_season> Лето </Favorite_season>
<Country_you_would_like_to_visit> США </Country_you_would_like_to_visit>
</Preferences>

       нажать Esc и ввести :wq (для выхода)

 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML 
         vim sklls.xml  далее i далее вводим текст

<?xml version="1.0" encoding="windows-1251"?>
<skills>
<GitBash> Создание, копирование, редактирование файлов/папок </GitBash>
<Git> Создание репозитория, клонирование </Git>
<JSON> Изучение формата </JSON>
<XML> Изучение формата </XML>
</skills>

         нажать Esc и ввести :wq (для выхода)


 32. Сделать коммит в одну строку. 
          git add -A && git commit -m "add preferences.xml, sklls.xml"

 33. Отправить сразу 2 файла на внешний репозиторий.
          git push

 34. На веб интерфейсе создать файл bug_report.xml. 
          через add file в репозитории
  
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
         внесен коммит Create bug_report.xml и нажата кнопка "commit new file"

 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.

<?xml version="1.0" encoding="UTF-8"?>
  <bug_report>
  <Scope> Win10, Office 2010 </Scope>
  <Summery> При обновлении баг репорта, перестала выгружаться строка summary </Summery>
  <Severity> medium </Severity>
  <Priority> Minor </Priority>
    <Steps> 
    <Steps1> Шаг1 </Steps1>
    <Steps2> Шаг2 </Steps2>
    <Steps3> Шаг3 </Steps3>
    </Steps>
    </bug_report>

 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе. 
           - Внесен commit и нажата кнопка "Commit changes" 

 38. Синхронизировать внешний и локальный репозиторий XML 
           git pull

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

TXT

 1. Создать внешний репозиторий c названием TXT.

mkdir TXT
cd TXT
git init
git remote add origin git@github.com:Shaginosik/TXT.git
curl -u 'Shaginosik:ghp_1V9Lq1uafwuXr91QIXni8Aoj3LYiBX3XL7v' https://api.github.com/user/repos -d '{"name":"TXT"}'

 2. Клонировать репозиторий TXT на локальный компьютер. 
          создан в первом пункте

 3. Внутри локального TXT создать файл “new.txt”.
          touch new.txt

 4. Добавить файл под гит. 
          git add new.txt

 5. Закоммитить файл. 
         git commit -m "add new.txt"

 6. Отправить файл на внешний GitHub репозиторий. 
         git push

 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.

         vim new.txt
         нажать i для редактирования

ФИО: Шагинов Евгений Валерьевич
Возраст: 39 лет
Количество домашних животных: нет
Будущая желаемая зарплата: 250 000 руб.

         Нажать Esc ввести :wq

 8. Отправить изменения на внешний репозиторий.

         git add new.txt
         git commit -m "update new.txt"
         git push

 9. Создать файл preferences.txt 
         touch preferences.txt
 
10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.

        vim preferences.txt 
        нажать i для редактирования

Любимый фильм: Назад в будущее
Любимый сериал: Очень странные дела
Любимая еда: Биг Маг
Любимое время года: Лето
Страна которую хотели бы посетить: США

        Нажать Esc ввести :wq

 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT 
        cat > skills.txt и внести информацию ниже

Скиллы которые будут изучены на курсе
Базовая теория (Что такое тестирование, багрепорты, документация, виды, методы, направления тестирования и т.п.) SDLC, STLC.
Что такое клиент-серверная архитектура
HTTP Методы запросов на сервер
Коды ответов HTTP сервера
Структуры HTTP запросов и ответов
Что такое JSON, XML. Их структура
естирование API через Postman (JS, автотесты API)
Тестирование API через Postman (JS, автотесты API)

 12. Сделать коммит в одну строку. 
        git add -A && git commit -m "add preferences.txt, sklls.txt"

 13. Отправить сразу 2 файла на внешний репозиторий. 
        git push

 14. На веб интерфейсе создать файл bug_report.txt. 
        выполнено на веб интерфейсе

 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе. 
        выполнено на веб интерфейсе

 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT. 
        выполнено на веб интерфейсе

 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе. 
        выполнено на веб интерфейсе

 18. Синхронизировать внешний и локальный репозиторий TXT 
        git pull